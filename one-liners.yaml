|
  # perl-and-raku-one-liners-in-python
  
  I sympathize with the concept of perl, but let's stay within python shall we  
  An effort to translate perl and raku one-liners into python.  
  Inspired by the books by Peteris Krumins and by Andrew Shitov.
  
  ## The One-Liners
  We expect to run these in a `bash` shell environment. Therefore all multiline code samples are `bash` syntax, leading `$` sigils are dropped.  
  Using a shell redirection, a pipe or external commands, except heredocs, herestrings and process substitution of `cat` is considered cheating.  
  The 'canonical' solution, if given, is how I would actually do it, if I had to. Cheating is embraced there.

---

title: |
  Replace patterns in file
  Replace all occurences of `you` by `me` in the file `file`
perl:
  perl -pi -e 's/you/me/g' file
python: |
  python <(cat <<'EOF'
  import sys, re
  file, replaced = sys.argv[1], ''
  with open(file, 'r') as f:
    replaced = re.sub('you', 'me', f.read())
  with open(file, 'w') as f:
    f.write(replaced)
  EOF
  ) file
canonical:
  sed -i 's/you/me/g' file

---

title: |
  The same thing, just in several files and only in lines containing digits.
perl:
  perl -pi -e 's/you/me/g if /\d/' file1 file2 file3

---

title: |
  Find all lines that occur more than once.
perl:
  perl -ne 'print if $a{$_}++' file

---

title: |
  Print out the file with lines numbered.
perl:
  perl -ne 'print "$. $_"' file

---

|
  ---
  >Note: this file was machine generated
